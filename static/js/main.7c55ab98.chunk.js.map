{"version":3,"sources":["index.js"],"names":["Square","value","onClick","className","Board","props","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4MAIA,SAASA,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QACpB,OACI,4BAAQC,UAAU,SAASD,QAASA,GAApC,IAA+CD,G,IAKjDG,E,YAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,yEAQPC,GACR,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBP,IAAYA,EAAQI,KACvCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACVR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,mCAIlBC,GAAI,IAAD,OACd,OAAO,kBAACX,EAAD,CAAQC,MAAOW,KAAKN,MAAMC,QAAQI,GAAIT,QAAS,kBAAI,EAAKc,YAAYL,Q,+BAIvE,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAK9C,OAHeU,EAARC,EAAiB,UAAYA,EAClB,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAG9D,6BACE,yBAAKP,UAAU,UAAUc,GACzB,yBAAKd,UAAU,aACZS,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKhB,UAAU,aACZS,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKhB,UAAU,aACZS,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GA9CTC,IAAMC,WAqDpBC,E,iLAEF,OACE,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACC,EAAD,OAEF,yBAAKD,UAAU,aACb,8BACA,mC,GATSiB,IAAMC,WAuBzB,SAASP,EAAgBP,GAWrB,IAVA,IAUA,MAVc,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEX,eAAqB,CAAhB,IAAII,EAAC,KAAW,cACCA,EADD,GACVY,EADU,KACPC,EADO,KACJC,EADI,KAEjB,GAAIlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GAAI,OAAOlB,EAAQgB,GAE7F,OAAO,KApBXG,IAASC,OACP,kBAACL,EAAD,MACAM,SAASC,eAAe,U","file":"static/js/main.7c55ab98.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square({value, onClick}) {\n    return (\n        <button className=\"square\" onClick={onClick}> {value}</button>\n    )\n\n}\n\nclass Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i){\n        const squares = this.state.squares.slice();\n        if(calculateWinner(squares) || squares[i]) return;\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n\n    }\n  renderSquare(i) {\n    return <Square value={this.state.squares[i]} onClick={()=>this.handleClick(i)}/>;\n  }\n\n  render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if(winner) status = 'Winner ' + winner;\n        else status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i of lines) {\n        const [a, b, c] = i;\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return squares[a];\n    }\n    return null;\n}\n"],"sourceRoot":""}